name: Delete Disabled Users

on:
  schedule:
    # Runs at 5:00 AM and 5:00 PM IST (23:30 & 11:30 UTC)
    - cron: "30 23,11 * * *"
  workflow_dispatch: # optional: allows manual run from Actions tab

jobs:
  call-delete-endpoint:
    runs-on: ubuntu-latest

    steps:
      - name: Wake up backend and call DELETE endpoint
        run: |
          max_retries=5
          retry_delay=30
          
          echo "Step 1: Waking up the backend service..."
          # First, wake up the backend with a simple GET request (ignore response)
          curl -s --max-time 60 "https://soulsyncbackend.onrender.com/api/user/users" || echo "Wake-up call completed"
          
          echo "Waiting 45 seconds for backend to fully start..."
          sleep 45
          
          echo "Step 2: Calling delete endpoint..."
          for attempt in $(seq 1 $max_retries); do
            echo "Attempt $attempt of $max_retries"
            
            # Store response in temp file to separate body from status code
            temp_file=$(mktemp)
            http_code=$(curl -s -w "%{http_code}" --max-time 90 -o "$temp_file" -X DELETE "https://soulsyncbackend.onrender.com/api/user/deleteUserDisabledAccounts")
            response=$(cat "$temp_file")
            rm "$temp_file"
            
            echo "HTTP Status: $http_code"
            echo "Response: $response"
            
            # Check if http_code is exactly 200
            if [ "$http_code" = "200" ]; then
              echo "Success! Deleted users endpoint called successfully"
              exit 0
            else
              echo "Attempt $attempt failed with status $http_code"
              
              if [ $attempt -lt $max_retries ]; then
                echo "Waiting $retry_delay seconds before retry..."
                sleep $retry_delay
                # Keep retry delay constant for Render (cold starts are unpredictable)
              fi
            fi
          done
          
          echo "All $max_retries attempts failed"
          exit 1